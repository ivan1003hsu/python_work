1. 監督式學習 區分「訓練資料」 和 「測試資料」 

    from sklearn.model_selection import train_test_split
    x_train, x_test, y_train, y_test = train_test_split(x_data, y_data, 
    test_sizes=0.2, random_states=0)

2. 分類用 KNighborsClassifier 和 SVC

    from sklearn.neighbors import KNeighborsClassifier
    from sklearn.svm import SVC

3.線性迴歸用 LinearRegression 

    from sklearn.linear_model import LinearRegression

4.常規化數據使精確度提高 preprocessing

    from sklearn import preprocessing
    x1_data = preprocessing.scale(x_data)

5.機器學習的各項參數 以 LinearRegression 為例

    lr = LinearRegression()

    lr.coef_ 
    x_data中各項參數的權重

    lr.interception_
    直線與y軸的截距

    lr.get_params
    lr設定的各項參數

    lr.score(x_data,y_data)
    lr以x_data預測值和y_data比較的精度

6.交叉驗證 用cross_val_score learning_curve 及 validation 驗證是否過度擬合（overfitting)
(以lr為例)

    from sklearn.model_selection import cross_val_score
    scores = cross_val_score(lr, x_data, y_data, cv=5, scoring='neg_mean_squared_error')
    print(scores.mean())

    from sklearn.model_selection import learning_curve
    train_sizes, train_loss, test_loss = learning_curve(lr(gamma=0.001), x, y, cv=10, scoring='neg_mean_squared_error', train_sizes=[0.1, 0.25, 0.5, 0.75, 1])
    train_loss = -np.mean(train_loss,axis=1)
    test_loss = -np.mean(test_loss,axis=1)
    plt.plot(train_sizes,test_loss,c='g', label='test_loss')
    plt.plot(train_sizes,train_loss,c='r', label='train_loss')
    plt.xlabel('train_sizes')
    plt.ylabel('error')
    plt.show()

    from sklearn.model_selection import validation_curve
    param_range = np.logspace(-6,-2.3 ,5)
    train_loss, test_loss = validation_curve(lr(),x, y, param_name='gamma', param_range=param_range, cv=10, scoring='neg_mean_squared_error')
    train_loss = -np.mean(train_loss,axis=1)
    test_loss = -np.mean(test_loss,axis=1)
    plt.plot(param_range,test_loss,c='g', label='test_loss')
    plt.plot(param_range,train_loss,c='r', label='train_loss')
    plt.xlabel('gamma')
    plt.ylabel('loss')
    plt.show()

7.保存與讀取 joblib

    保存
    from sklearn.externals import joblib
    joblib.dump(lr,'save/lr.pkl')

    讀取
    from sklearn.externals import joblib
    lr = joblib.load('save/lr.pkl')